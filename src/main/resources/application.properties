	
spring.application.name=AAsam

# DataSource設定
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/identityV
spring.datasource.username=springuser
spring.datasource.password=p@ss

# SQLスクリプトの初期化モード
spring.sql.init.mode=always

# スキーマを最初に実行する設定（schema.sqlを最初に実行）
spring.sql.init.schema-locations=classpath:/schema.sql

# SQLファイルのパスを指定して自動実行する設定（さば、ハンター、マップのデータベース初期設定）
spring.sql.init.data-locations=classpath:/survivorsData.sql,classpath:/huntersData.sql,classpath:/mapData.sql

# MyBatisの設定
mybatis.mapper-locations=classpath:/com/example/mapper/*.xml  # XMLファイルのパス
mybatis.type-aliases-package=com.example.demo.entity  # エンティティのパッケージ

# ログ表示設定
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG



#2025/05/16 マップピックの後の陣営選択を作成した。
#selectSide.htmlを作成中。現在は動作できてるけど、171,172行目の初期背景の設定が上手くいかない。
#・背景の設定（おそらく画像の指定方法が悪い？）を修正する
#・背景を無限ループの動画にすることが可能なのであれば、動画にする
#どちらかで対応。
#
#今後としては、pickCountやRoundCountなどのリセットをするメソッドの位置の確認（つまり、ラウンド２以降の初期設定）
#一応記述はしてるっぽい。
#また、ラウンド２以降は、マップピック、陣営選択権が変わる。マップピックについては、mapBanの配列？に続けて入れる形でＯＫかな？
#陣営選択については、陣営を選択した段階でteam1とteam2の変数を入れ替える管理方法を検討。
#→その方法を使う場合は、ポイント数を管理する方法を考える必要がある。データベースで管理する方が無難か？
