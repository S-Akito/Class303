#spring.application.name=AAsam
##DataSource
#
##Postgresのドライバーの設定
#spring.datasource.driver-class-name=org.postgresql.Driver
#
##データベースへの接続URLを設定
#spring.datasource.url=jdbc:postgresql://localhost:5432/identityV
#
##データベース接続のためのユーザー名を設定
#spring.datasource.username=springuser
#
##データベース接続のためのパスワードを設定
#spring.datasource.password=p@ss
#
##SQLスクリプトの初期化モードを設定
#spring.sql.init.mode=always
#	#↑Spring Bootアプリケーションが起動するたびにSQLスクリプトを実行するようにする設定
#
## スキーマを最初に実行する設定（schema.sqlを最初に実行）
#spring.sql.init.schema-locations=classpath:/schema.sql
#
## SQLファイルのパスを指定して自動実行する設定（さば、ハンター、マップのデータベース初期設定）
#spring.sql.init.data-locations=classpath:/survivorsData.sql,classpath:/huntersData.sql,classpath:/mapData.sql
#
#
##Log表示設定
#logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
#	#↑com.example.webapp.を使用する際、logging.levelをDEBUGに設定すると実行されるSQLクエリやパラメータなどの詳細な情報がログに出力されます。
#	
	
spring.application.name=AAsam

# DataSource設定
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/identityV
spring.datasource.username=springuser
spring.datasource.password=p@ss

# SQLスクリプトの初期化モード
spring.sql.init.mode=always

# スキーマを最初に実行する設定（schema.sqlを最初に実行）
spring.sql.init.schema-locations=classpath:/schema.sql

# SQLファイルのパスを指定して自動実行する設定（さば、ハンター、マップのデータベース初期設定）
spring.sql.init.data-locations=classpath:/survivorsData.sql,classpath:/huntersData.sql,classpath:/mapData.sql

# MyBatisの設定
mybatis.mapper-locations=classpath:/com/example/mapper/*.xml  # XMLファイルのパス
mybatis.type-aliases-package=com.example.demo.entity  # エンティティのパッケージ

# ログ表示設定
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG



#2025.04.09
#選択したマップ（ボタン）に応じて、ArrayList（banMap）に格納していく動作はOK。
#banMapはsession.setAttribute()で、ArrayListをHTMLに送ることは出来てる…？
#HTMLでbanMapを扱おうとしたときに、おそらくArraiListとして使ってるから、中の要素を使えてない？
#
#動作としては、マップを選択してArrayListに格納していく動作はできてる
if - unless文　調べてみる