spring.application.name=AAsam
#DataSource

#Postgresのドライバーの設定
spring.datasource.driver-class-name=org.postgresql.Driver

#データベースへの接続URLを設定
spring.datasource.url=jdbc:postgresql://localhost:5432/identityV

#データベース接続のためのユーザー名を設定
spring.datasource.username=springuser

#データベース接続のためのパスワードを設定
spring.datasource.password=p@ss

#SQLスクリプトの初期化モードを設定
spring.sql.init.mode=always
	#↑Spring Bootアプリケーションが起動するたびにSQLスクリプトを実行するようにする設定

# スキーマを最初に実行する設定（schema.sqlを最初に実行）
spring.sql.init.schema-locations=classpath:/schema.sql

# SQLファイルのパスを指定して自動実行する設定（さば、ハンター、マップのデータベース初期設定）
spring.sql.init.data-locations=classpath:/survivorsData.sql,classpath:/huntersData.sql,classpath:/mapData.sql


#Log表示設定
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
	#↑com.example.webapp.を使用する際、logging.levelをDEBUGに設定すると実行されるSQLクエリやパラメータなどの詳細な情報がログに出力されます。
	
	
	#データベースには４種類（サバイバー、ハンター、マップ、勝敗結果）を実行時に書き換える。OK
	#エンティティでフィールド設定→マッパー（インターフェース）→マッパー（xml）でインターフェースのメソッドを指定して、具体的なクエリの記述
	#Controllerを作成して、ホーム画面を表示。ボタンを押したらマップピック画面に移るようにした。
	#続きはデータベースを参照しながら、マップ名が表示されて、バンピックが始まるように組んでいくように。